# 用于构建和测试 Java Maven 项目的工作流
# 包含依赖缓存以提高执行速度

name: Java CI with Maven

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  # 定时构建，确保项目持续可构建
  schedule:
    - cron: '0 2 * * 1' # 每周一凌晨2点运行
  # 允许手动触发工作流
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17', '21' ]
      fail-fast: false
    name: Java ${{ matrix.java }} 构建

    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install all modules
      run: ./mvnw install -B

    - name: 设置 JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: maven

    - name: Maven 构建与验证
      run: ./mvnw clean verify -B -DprocessAllModules=true

    - name: 静态代码分析
      if: matrix.java == '17'
      run: ./mvnw -P quality spotbugs:check pmd:check checkstyle:check -B

    - name: 依赖安全检测
      if: matrix.java == '17'
      run: ./mvnw org.owasp:dependency-check-maven:check -DfailBuildOnCVSS=7

    - name: 上传测试结果
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-java-${{ matrix.java }}
        path: '**/target/surefire-reports/*.xml'
        retention-days: 7

    - name: 上传代码覆盖率报告
      if: success() && matrix.java == '17'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: '**/target/site/jacoco/'
        retention-days: 7

    - name: 上传安全报告
      if: always() && matrix.java == '17'
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: '**/target/dependency-check-report.html'
        retention-days: 7

  release:
    needs: build # 确保在构建成功后才发布
    runs-on: ubuntu-latest
    # 仅在创建标签时触发发布 (例如 v1.0.0)
    if: startsWith(github.ref, 'refs/tags/v')
    name: Release to GitHub Packages

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置 JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        # 配置 GitHub Packages Maven 仓库
        server-id: github # 与 distributionManagement 中的 repository id 匹配
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: 从标签提取版本号
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: 设置项目版本
      run: ./mvnw versions:set-property -Dproperty=revision -DnewVersion=${{ steps.get_version.outputs.VERSION }} -DprocessAllModules=true -DgenerateBackupPoms=false

    - name: 设置 Maven settings.xml
      uses: s4u/maven-settings-action@v3.1.0
      with:
        servers: |
          [{
            "id": "github",
            "username": "${env.GITHUB_ACTOR}",
            "password": "${env.GITHUB_TOKEN}"
          }]

    - name: 发布到 GitHub Packages
      run: ./mvnw deploy -B -DprocessAllModules=true
      env:
        # 使用 GITHUB_TOKEN 进行认证
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
