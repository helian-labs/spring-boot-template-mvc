<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
    父POM - 项目聚合器

    职责：
    - 作为项目的聚合器，管理所有子模块
    - 提供通用的构建配置和插件管理
    - 导入BOM模块，实现依赖版本的统一管理

    架构位置：
    - 导入BOM模块的依赖管理
    - 被module1和module2继承，为它们提供通用配置
    - 不包含业务逻辑，仅提供构建和配置支持
    -->
    <!-- 项目基本信息 -->
    <groupId>com.helian</groupId>
    <artifactId>bom-example-project</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <name>Project Top Level</name>
    <description>Maven多模块项目，使用BOM进行依赖版本管理</description>
    <url>https://github.com/helian-labs/maven-template-bom</url>

    <!-- 项目模块 -->
    <modules>
        <module>bom</module>
        <module>module1</module>
        <module>module2</module>
    </modules>

    <!-- 项目属性 -->
    <properties>
        <!-- 版本管理 - 使用单一变量控制所有模块版本 -->
        <revision>1.0.0-SNAPSHOT</revision>

        <!-- 基础配置 -->
        <java.version>17</java.version>
        <maven.min.version>3.6.3</maven.min.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- 依赖版本 -->
        <junit.version>5.12.2</junit.version>

        <!-- 插件版本 - 集中管理提高一致性和升级便捷性 -->
        <maven-checkstyle-plugin.version>3.6.0</maven-checkstyle-plugin.version>
        <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
        <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
        <maven-javadoc-plugin.version>3.11.2</maven-javadoc-plugin.version>
        <maven-pmd-plugin.version>3.26.0</maven-pmd-plugin.version>
        <maven-source-plugin.version>3.3.1</maven-source-plugin.version>
        <maven-surefire-plugin.version>3.5.3</maven-surefire-plugin.version>
        <jacoco-maven-plugin.version>0.8.13</jacoco-maven-plugin.version>
        <spotbugs-maven-plugin.version>4.9.3.0</spotbugs-maven-plugin.version>
        <spotless-maven-plugin.version>2.44.4</spotless-maven-plugin.version>
        <versions-maven-plugin.version>2.18.0</versions-maven-plugin.version>
        <dependency-check-maven.version>12.1.1</dependency-check-maven.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <flatten-maven-plugin.version>1.7.0</flatten-maven-plugin.version>
    </properties>

    <!-- 依赖管理 - 控制整个项目的依赖版本 -->
    <dependencyManagement>
        <dependencies>
            <!-- 导入BOM - 实现依赖版本的集中管理 -->
            <dependency>
                <groupId>com.helian</groupId>
                <artifactId>bom</artifactId>
                <version>${revision}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 测试依赖 - JUnit 5系列组件 -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 构建配置 - 定义项目构建过程中使用的插件和规则 -->
    <build>
        <pluginManagement>
            <plugins>
                <!-- 编译插件 - 控制Java代码的编译过程和选项 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <parameters>true</parameters>
                        <release>${java.version}</release>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <compilerArgs>
                            <arg>-Xlint:all</arg>
                            <arg>-Werror</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>

                <!-- 测试插件 - 运行单元测试 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>

                <!-- 规则强制插件 - 确保构建环境满足一系列前置条件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-rules</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>${maven.min.version}</version>
                                    </requireMavenVersion>
                                    <requireJavaVersion>
                                        <version>[${java.version},)</version>
                                    </requireJavaVersion>
                                    <dependencyConvergence />
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- 代码覆盖率插件 - 测量测试覆盖率并强制最低覆盖率标准 -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>jacoco-check</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <element>PACKAGE</element>
                                        <limits>
                                            <limit>
                                                <counter>LINE</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>0.70</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- 源码插件 - 为构建生成源码jar包，Maven中央仓库发布必需 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- JavaDoc插件 - 生成API文档并打包，Maven中央仓库发布必需 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- 版本管理插件 - 用于批量更新依赖版本和检查过时依赖 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                </plugin>

                <!-- Spotless插件 - 代码格式化和风格检查 -->
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>${spotless-maven-plugin.version}</version>
                    <configuration>
                        <java>
                            <importOrder />
                            <removeUnusedImports />
                            <googleJavaFormat />
                            <trimTrailingWhitespace />
                            <endWithNewline />
                        </java>
                    </configuration>
                    <executions>
                        <execution>
                            <id>spotless-check</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>spotless-apply</id>
                            <!-- 通常不绑定到生命周期，手动执行 ./mvnw spotless:apply -->
                            <phase>none</phase>
                            <goals>
                                <goal>apply</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Spotbugs插件 - 静态代码分析工具，查找潜在bug -->
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>spotbugs-check</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- PMD插件 - 静态代码分析工具，检查代码质量问题 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>pmd-check</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Checkstyle插件 - 检查代码风格是否符合规范 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <configuration>
                        <configLocation>google_checks.xml</configLocation>
                    </configuration>
                    <executions>
                        <execution>
                            <id>checkstyle-check</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- 依赖检查插件 -->
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check-maven.version}</version>
                    <configuration>
                        <failBuildOnCVSS>7</failBuildOnCVSS>
                        <skipTestScope>true</skipTestScope>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- 资源处理插件 - 处理资源文件中的变量替换 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <delimiters>
                            <delimiter>@</delimiter>
                        </delimiters>
                        <useDefaultDelimiters>false</useDefaultDelimiters>
                    </configuration>
                </plugin>

                <!-- 扁平化版本插件 - 简化多模块项目中的版本表示 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${flatten-maven-plugin.version}</version>
                    <configuration>
                        <updatePomFile>true</updatePomFile>
                        <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    </configuration>
                    <executions>
                        <execution>
                            <id>flatten</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>flatten.clean</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <!-- 默认激活的插件 - 对所有模块生效 -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!-- 构建profile配置 - 针对不同场景的构建配置 -->
    <profiles>
        <!-- 质量检查profile - 用于激活代码质量检查插件 -->
        <profile>
            <id>quality</id>
            <build>
                <plugins>
                    <!-- Spotless插件 -->
                    <plugin>
                        <groupId>com.diffplug.spotless</groupId>
                        <artifactId>spotless-maven-plugin</artifactId>
                    </plugin>

                    <!-- Spotbugs插件 -->
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                    </plugin>

                    <!-- PMD插件 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                    </plugin>

                    <!-- Checkstyle插件 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- 安全检查profile - 用于依赖安全分析 -->
        <profile>
            <id>security</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>${dependency-check-maven.version}</version>
                        <configuration>
                            <failBuildOnCVSS>7</failBuildOnCVSS>
                            <skipTestScope>true</skipTestScope>
                            <formats>
                                <format>HTML</format>
                                <format>JSON</format>
                            </formats>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- 添加扁平化版本插件配置，处理revision变量 -->
        <profile>
            <id>flatten</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>flatten-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- 许可证信息 - 明确项目的开源许可类型 -->
    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <!-- 源码管理 - 指定代码仓库位置 -->
    <scm>
        <url>https://github.com/helian-labs/maven-template-bom</url>
        <connection>scm:git:git@github.com:helian-labs/maven-template-bom.git</connection>
        <developerConnection>scm:git:git@github.com:helian-labs/maven-template-bom.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <!-- 开发者信息 - 项目维护者信息 -->
    <developers>
        <developer>
            <id>helian-team</id>
            <name>Helian Team</name>
            <email>larryqi.sh@gmail.com</email>
            <url>https://github.com/helian-labs</url>
            <organization>Helian Labs</organization>
            <organizationUrl>https://github.com/helian-labs</organizationUrl>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>Asia/Shanghai</timezone>
        </developer>
    </developers>

</project>
